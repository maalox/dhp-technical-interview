openapi: 3.0.0
servers:
- url: http://localhost:3000/dev/
  description: Serverless Offline

paths:
  /account:              
    get:                                                 
        tags:
            - Account
        description: Get user account information. An account is comprised of profiles, and dependents.
        parameters:
            - $ref: "#/components/parameters/userID"
        responses:
            '200':
                description: User account returned.
                headers:
                    application:
                        $ref: "#/components/headers/application" 
                content:
                    application/json:
                        examples:
                           Account:
                               $ref: "#/components/examples/AccountWithNoDependents"

            '404':
                description: No account found.
                headers:
                    application:
                        $ref: "#/components/headers/application"                   
               
        summary: Returns account details.   


  /account/profile:
    post:
        tags:
            - Account
        description: Create's a new profile.
        requestBody:
            $ref: "#/components/requestBodies/CreateProfile"        

        responses:
            '200':
                description: Succesfully created a profile.   
                headers:
                    application:
                        $ref: "#/components/headers/application" 
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                userID:
                                    type: string
                                    example: "30934fe0-51ab-4b1e-af23-8ba44358234d"          
            '400':
                description: Invalid request.
                headers:
                    application:
                        $ref: "#/components/headers/application"
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                message:
                                    type: string
                                    example: "Unable to create a profile"  
        summary: Create a patient. 
        
components:

    headers:
      application:
        description: The version of servers with the date of the last build
        schema:
            type: string
            example: "Digital Health Platform/3.3.0/20200105"
            
            
    parameters:        
        userID:
            in: header
            name: userID
            description: An UUID representing a user account.
            schema:
                type: string
                example: "30934fe0-51ab-4b1e-af23-8ba44358234d"
            required: true    

    requestBodies: 
    
      CreateProfile:
          description: Represents a profile creation payload
          content:
              application/json:
                  schema:
                    type: object
                    required:
                        - timestamp
                        - patient
                    properties:
                            timestamp:
                                $ref: "#/components/schemas/ISO8601" 
                            patient:
                                 $ref: "#/components/schemas/Patient" 
                  examples:
                    CreatePatientProfile:
                        $ref: "#/components/examples/CreatePatientProfile" 
                    CreatePatientProfileNoDob:
                        $ref: "#/components/examples/CreatePatientProfileNoDob" 
                    CreatePatientProfileDobNoDay:    
                        $ref: "#/components/examples/CreatePatientProfileDobNoDay"
                        
    examples:
    
        AccountWithNoDependents:
            description: Represents a user's account with no programs or dependents. 
            value:
                account:
                  userID: "6ab2c811-858f-43bb-8b85-9a98c7091880"
                  firstName: "Tony"
                  lastName: "Pizza"
                  dateOfBirth: "1990-01-01"
                  email: "tony.pizza@example.com" 
                  locale: "en-US"

        CreatePatientProfile:
            summary: Create a profile for a patient.
            value:
                timestamp: "2020-01-01T00:00:00+05:00"
                patient: 
                    firstName: "Tony"
                    lastName: "Pizza"
                    dateOfBirth: '1990-01-01'
                    locale: "en-US"
        
        CreatePatientProfileNoDob:
            summary: Create a profile for a patient without DOB.
            value:
                timestamp: "2020-01-01T00:00:00+04:00"
                patient: 
                    firstName: "Alex"
                    lastName: "Ayers"
                    locale: "en-US"
        
        CreatePatientProfileDobNoDay:
            summary: Create a profile for a patient with partial DOB.
            value:
                timestamp: "2020-01-01T00:00:00+04:00"
                patient: 
                    firstName: "Tony"
                    lastName: "Pizza"
                    dateOfBirth: "1950-01"
                    locale: "en-US"

    schemas:
        Patient:
            description: Represents a patient.
            type: object
            required:
                - firstName
                - lastName
                - locale
            properties:
                firstName:
                    type: string
                    description: The first name of the patient.
                    example: Timmy
                lastName:
                    type: string
                    description: The last name of the patient.
                    example: Peapod
                locale:
                    type: string
                    description: The user's locale this can be xx or xx-XX. 
                    example: "en-US"    
                dateOfBirth:
                    type: string
                    format: date
                    pattern: /([0-9]{4})-(?:[0-9]{2})-([0-9]{2})/
                    description: The date of birth of the patient.   
                    example: "2010-01-01"

        ISO8601:
            type: string
            description: An ISO8601 date time representing the device's local time.
            format: date-time     
            example: "2020-01-01T12:30:00+04:00"

info:
  license:
    name: MIT
  version: 1.0.0
  title: DHP Technical Interview
  description: The following APIs should be implemented as part of the DHP Technical Interview Process.
  contact:
    name: Alex Ayers
    email: alex.ayers@tevapharm.com